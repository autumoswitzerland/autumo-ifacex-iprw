<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.autumo.ifacex.iprw</groupId>
	<artifactId>autumo-ifacex-iprw</artifactId>
	<version>2.0.0</version>
	<packaging>pom</packaging>
	
	<name>autumo-ifacex-iprw</name>
	<description>Additional Readers/Writers for autumo ifaceX</description>
	<url>http://products.autumo.ch</url>
	
	<organization>
		<name>autumo</name>
	</organization>
		
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<modules>
	    <module>mod-az-aws-s3</module>
	    <module>mod-bb-b2</module>
	    <module>mod-dbox</module>
	    <module>mod-ftp</module>
	    <module>mod-google-drive</module>
	    <module>mod-google-storage</module>
	    <module>mod-ms-azure</module>
	    <module>mod-ms-graph</module>
	    <module>mod-os</module>
	    <module>mod-sftp</module>
	    <module>mod-webdav</module>
  	</modules>
  		
	<licenses>
		<license>
			<name>GPL-3.0 license with Classpath Exception</name>
			<url>https://github.com/autumoswitzerland/autumo-ifacex-iprw/blob/main/LICENSE.md</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.4.2</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Automatic-Module-Name>${project.groupId}</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
			    <artifactId>maven-resources-plugin</artifactId>
			    <version>3.3.1</version>
			    <executions>			
					<execution>
			            <id>copy-license</id>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>${basedir}/target/classes/META-INF</outputDirectory>
			                <resources>
			                    <resource>
			                        <include>LICENSE.md</include>
				                    <directory>${basedir}</directory>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>			    
			        <execution>
			            <id>copy-jar-resource</id>
			            <phase>install</phase>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>${basedir}/lib</outputDirectory>
			                <resources>
			                    <resource>
				                    <include>*.jar</include>
				                    <directory>${basedir}/target</directory>
								</resource>
			                </resources>
			            </configuration>
			        </execution>			        
			    </executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
				    <execution>
				        <phase>clean</phase>
				        <goals>
				            <goal>run</goal>
				        </goals>
				        <configuration>
				            <target>
				                <delete>
				                    <fileset dir="${basedir}/lib" includes="*.jar" />
				                </delete>
				            </target>
				        </configuration>
				    </execution>
				</executions>
			</plugin>			
			
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
			                <includeScope>provided</includeScope>
			                <excludeScope>compile</excludeScope>
							<outputDirectory>${basedir}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
						
		</plugins>
	</build>
	
	<dependencies>
		
		
		<!-- autumo ifaceX -->
		
		<dependency>
		    <groupId>ch.autumo.commons</groupId>
		    <artifactId>autumo-commons</artifactId>
		    <version>1.1.0</version>
		    <scope>compile</scope>
		</dependency>

		<dependency>
		    <groupId>ch.autumo.beetroot</groupId>
		    <artifactId>autumo-beetroot</artifactId>
		    <version>3.0.1</version>
		    <scope>compile</scope>
		</dependency>

		<dependency>
		    <groupId>ch.autumo.ifacex</groupId>
		    <artifactId>autumo-ifacex</artifactId>
		    <version>2.0.0</version>
		    <scope>compile</scope>
		</dependency>

  
		<!-- Deps -->
		
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.36</version>
		    <scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20240303</version>
		    <scope>provided</scope>
		</dependency>

		<dependency>
    		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>2.16.1</version>
		    <scope>provided</scope>
		</dependency>


		<!-- Testing -->

		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-core</artifactId>
		    <version>3.9.0</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>5.7.0</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>5.7.0</version>
		    <scope>test</scope>
		</dependency>
		
	</dependencies>
	
</project>
